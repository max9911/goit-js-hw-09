{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,wBAC/BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,IAAKJ,SAASC,cAAc,SAG9B,IAAII,EACAC,EAsBJ,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,YAAW,KACTC,QAAQC,QAAQ,CAAEN,SAAUA,EAAUN,MAAOO,IAASM,MAAKC,GACzDC,EAAArB,GAASsB,OAAOC,QAAQ,oBAAoBX,QAAeC,QAC5D,GACAA,GAEHG,YAAW,KACTC,QAAQO,OAAO,CAAEZ,SAAUA,EAAUN,MAAOO,IAASY,OAAML,GACzDC,EAAArB,GAASsB,OAAOI,QAAQ,mBAAmBd,QAAeC,QAC3D,GACAA,E,CAjCPX,EAAKM,IAAImB,iBAAiB,SAE1B,SAAgBC,GACdA,EAAMC,iBACN3B,EAAKM,IAAIsB,UAAW,EACpB,MAAMC,EACJC,OAAO9B,EAAKK,KAAKa,OAASY,OAAO9B,EAAKC,OAAOiB,OAC7CY,OAAO9B,EAAKI,MAAMc,OACpBX,EAASP,EAAKC,OAAOiB,MAErB,IAAK,IAAIa,EAAI,EAAGA,GAAKxB,EAAQwB,GAAK,EAChCvB,EAAQsB,OAAO9B,EAAKI,MAAMc,OAASY,OAAO9B,EAAKK,KAAKa,OAASa,EAAI,IACjEtB,EAAcsB,EAAGvB,GAGnBM,YAAW,KACTd,EAAKM,IAAIsB,UAAW,CAAK,GACxBC,EAAW,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst elem = {\n  amount: document.querySelector('input[name=\"amount\"]'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  btn: document.querySelector('.btn'),\n};\n\nlet amount;\nlet delay;\n\nelem.btn.addEventListener('click', submit);\n\nfunction submit(event) {\n  event.preventDefault();\n  elem.btn.disabled = true;\n  const btnDelay =\n    Number(elem.step.value) * Number(elem.amount.value) +\n    Number(elem.delay.value);\n  amount = elem.amount.value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    delay = Number(elem.delay.value) + Number(elem.step.value * (i - 1));\n    createPromise(i, delay);\n  }\n\n  setTimeout(() => {\n    elem.btn.disabled = false;\n  }, btnDelay + 500);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    setTimeout(() => {\n      Promise.resolve({ position: position, delay: delay }).then(value =>\n        Notiflix.Notify.success(`Fullfiled promis ${position} in ${delay}ms`)\n      );\n    }, delay);\n  } else {\n    setTimeout(() => {\n      Promise.reject({ position: position, delay: delay }).catch(value =>\n        Notiflix.Notify.failure(`Rejected promis ${position} in ${delay}ms`)\n      );\n    }, delay);\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$elem","amount","document","querySelector","delay","step","btn","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$createPromise","position","delay1","Math","random","setTimeout","Promise","resolve","then","value","$parcel$interopDefault","Notify","success","reject","catch","failure","addEventListener","event","preventDefault","disabled","btnDelay","Number","i"],"version":3,"file":"03-promises.edb5dae0.js.map"}